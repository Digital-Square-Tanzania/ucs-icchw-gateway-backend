generator client {
  provider        = "prisma-client-js"
  seed            = "(function)"
  previewFeatures = ["views"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id               String             @id @default(uuid())
  password         String
  firstName        String             @map("first_name")
  middleName       String?            @map("middle_name")
  lastName         String             @map("last_name")
  email            String             @unique
  phoneNumber      String?            @unique @map("phone_number")
  avatar           String?
  status           UserStatus         @default(ACTIVE)
  createdAt        DateTime           @default(now()) @map("created_at")
  deletedAt        DateTime?          @map("deleted_at")
  isDeleted        Boolean            @default(false) @map("is_deleted")
  joinDate         DateTime           @default(now()) @map("join_date")
  roleId           Int                @map("role_id")
  updatedAt        DateTime           @updatedAt @map("updated_at")
  lastLogin        DateTime?          @map("last_login")
  BlacklistedToken BlacklistedToken[]
  UserToken        UserToken?
  role             Role               @relation(fields: [roleId], references: [id])

  @@index([email])
  @@map("users")
}

model Role {
  id          Int      @id @default(autoincrement())
  name        RoleType @unique
  description String
  users       User[]

  @@map("roles")
}

model UserToken {
  id          String   @id @default(uuid())
  createdAt   DateTime @default(now()) @map("created_at")
  expiresAt   DateTime @map("expires_at")
  resetToken  String?  @map("reset_token")
  userId      String   @unique @map("user_id")
  verifyToken String?  @map("verify_token")
  user        User     @relation(fields: [userId], references: [id])

  @@index([resetToken])
  @@index([verifyToken])
  @@map("user_tokens")
}

model BlacklistedToken {
  id        String   @id @default(uuid())
  token     String   @unique
  userId    String   @map("user_id")
  createdAt DateTime @default(now()) @map("created_at")
  user      User     @relation(fields: [userId], references: [id])

  @@index([userId])
  @@map("blacklisted_tokens")
}

model RequestLog {
  id        String   @id @default(uuid())
  ip        String
  path      String
  method    String
  timestamp DateTime @default(now())
  createdAt DateTime @default(now()) @map("created_at")

  @@map("request_logs")
}

enum RoleType {
  UCS_DEVELOPER
  MOH_ADMIN
  COUNCIL_COORDINATOR
  EXTERNAL_SYSTEM
}

enum UserStatus {
  ACTIVE
  INACTIVE
  SUSPENDED
}

model OpenMRSLocation {
  locationId   Int       @id @default(autoincrement()) @map("location_id")
  name         String
  description  String?
  latitude     String?
  longitude    String?
  retired      Boolean   @default(false)
  uuid         String?   @unique @default(uuid())
  parent       String?
  type         String?
  hfrCode      String?   @map("hfr_code")
  locationCode String?   @map("location_code")
  createdAt    DateTime  @default(now()) @map("created_at")
  updatedAt    DateTime? @updatedAt @map("updated_at")

  @@map("openmrs_location")
}

model OpenMRSLocationTag {
  id          Int      @id @default(autoincrement())
  uuid        String   @unique
  name        String
  description String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  @@map("openmrs_location_tags")
}

model OpenMRSLocationAttributeType {
  id          Int      @id @default(autoincrement())
  uuid        String   @unique
  name        String
  description String?
  dataType    String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  @@map("openmrs_location_attribute_types")
}

view OpenMRSLocationHierarchyView {
  index    Int     @id @map("index")
  uuid     String  @map("uuid")
  country  String? @map("country")
  zone     String? @map("zone")
  region   String? @map("region")
  district String? @map("district")
  council  String? @map("council")
  ward     String? @map("ward")
  name     String  @map("name")
  type     String  @map("type")

  @@map("openmrs_location_hierarchy_view") // Maps to the materialized view
}

model OpenMRSTeamRole {
  id         Int      @id @default(autoincrement())
  uuid       String   @unique
  identifier String   @unique
  display    String
  name       String
  members    Int      @default(0)
  creator    Json
  createdAt  DateTime @default(now())

  @@map("openmrs_team_roles")
}

model OpenMRSTeam {
  id             Int      @id @default(autoincrement())
  uuid           String   @unique
  name           String
  display        String?
  identifier     String?
  supervisorName String?  @map("supervisor_name")
  supervisorUuid String?  @map("supervisor_uuid")
  voided         Boolean  @default(false)
  voidReason     String?  @map("void_reason")
  members        Int?
  locationName   String?  @map("location_name")
  locationUuid   String?  @map("location_uuid")
  createdAt      DateTime @default(now())
  updatedAt      DateTime @default(now()) @updatedAt

  @@map("openmrs_teams")
}

model OpenMRSMemberRole {
  id          Int      @id @default(autoincrement())
  uuid        String   @unique
  name        String
  display     String
  description String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  @@map("openmrs_member_roles")
}

model OpenMRSTeamMember {
  id                  String             @id @default(uuid())
  identifier          String             @unique
  firstName           String             @map("first_name")
  middleName          String?            @map("middle_name")
  lastName            String             @map("last_name")
  NIN                 String?            @map("nin")
  phoneNumber         String?            @map("phone_number")
  email               String?
  username            String?
  userUuid            String?            @unique @map("user_uuid")
  personUuid          String
  openMrsUuid         String             @unique @map("openmrs_uuid")
  teamUuid            String?            @map("team_uuid")
  teamName            String?            @map("team_name")
  teamIdentifier      String?            @map("team_identifier")
  locationUuid        String?            @map("location_uuid")
  locationName        String?            @map("location_name")
  locationDescription String?            @map("location_description")
  roleUuid            String?            @map("role_uuid")
  roleName            String?            @map("role_name")
  createdAt           DateTime           @default(now()) @map("created_at")
  updatedAt           DateTime           @default(now()) @updatedAt @map("updated_at")
  AccountActivation   AccountActivation? @relation(fields: [accountActivationId], references: [id])
  accountActivationId Int?

  @@map("openmrs_team_members")
}

model OpenMRSPersonAttribute {
  uuid              String   @id @default(uuid())
  personUuid        String   @map("peron_uuid")
  attributeTypeUuid String   @map("attribute_type_uuid")
  attributeName     String   @map("attribute_name")
  attributeValue    String   @map("attribute_value")
  createdAt         DateTime @default(now()) @map("created_at")
  updatedAt         DateTime @updatedAt @map("updated_at")

  @@unique([personUuid, attributeName])
  @@map("openmrs_person_attributes")
}

model OpenMRSUsernameCounter {
  id        Int      @id @default(autoincrement())
  NIN       String   @unique @map("nin")
  counter   Int      @default(0)
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  @@map("openmrs_username_counters")
}

model DHIS2OrgUnit {
  id          String   @id @default(uuid())
  uuid        String   @unique
  name        String
  code        String?  @unique
  level       Int
  latitude    Float?
  longitude   Float?
  parentUuid  String?
  parentName  String?
  parentLevel Int?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  @@map("dhis2_org_units")
}

model DHIS2Role {
  id        String   @id @default(uuid())
  uuid      String   @unique
  name      String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("dhis2_roles")
}

model DHIS2User {
  id           String   @id @default(uuid())
  uuid         String   @unique
  username     String   @unique
  firstName    String?
  lastName     String?
  email        String?
  phoneNumber  String?
  disabled     Boolean  @default(false)
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
  orgUnitUuids Json
  roleUuids    Json

  @@map("dhis2_users")
}

model SyncLog {
  id         Int      @id @default(autoincrement())
  uuid       String   @unique @default(uuid())
  entityType String   @map("entity_type")
  entityUuid String?  @map("entity_uuid")
  action     String
  status     String
  details    Json?
  createdAt  DateTime @default(now())

  @@map("sync_logs")
}

model ApiLog {
  id        Int      @id @default(autoincrement())
  uuid      String   @unique @default(uuid())
  request   Json
  response  Json
  createdAt DateTime @default(now())

  @@map("api_logs")
}

enum slugType {
  ACTIVATION
  RESET
}

model AccountActivation {
  id         Int                 @id @default(autoincrement())
  uuid       String              @unique @default(uuid())
  userUuid   String
  user       OpenMRSTeamMember[]
  slug       String              @unique
  slugType   slugType
  isUsed     Boolean             @default(false)
  usedAt     DateTime?
  expiryDate DateTime
  createdAt  DateTime            @default(now())

  @@index([slug])
  @@map("account_activations")
}

model UcsMaster {
  id                Int       @id @default(autoincrement())
  firstName         String    @map("first_name")
  middleName        String?   @map("middle_name")
  familyName        String    @map("family_name")
  dob               DateTime
  gender            String
  username          String
  password          String
  memberIdentifier  String    @map("member_identifier")
  teamName          String?   @map("team_name")
  teamRole          String?   @map("team_role")
  createdAt         DateTime? @default(now()) @map("created_at")
  updatedAt         DateTime? @updatedAt @map("updated_at")
  userRole          String?   @default("Provider") @map("user_role")
  personId          Int?      @map("person_id")
  personUuid        String?   @map("person_uuid")
  userId            Int?      @map("user_id")
  userUuid          String?   @map("user_uuid")
  teamUuid          String?   @map("team_uuid")
  locationUuid      String?   @map("location_uuid")
  locationId        Int?      @map("location_id")
  locationName      String?   @map("location_name")
  memberId          Int?      @map("member_id")
  memberUuid        String?   @map("member_uuid")
  teamRoleId        Int?      @map("team_role_id")
  teamId            Int?      @map("team_id")
  errorLog          String?   @map("error_log")
  usernameDuplicate Boolean?  @default(false) @map("username_duplicate")

  @@index([username])
  @@index([memberIdentifier])
  @@map("ucs_master")
}
